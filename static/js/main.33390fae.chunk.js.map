{"version":3,"sources":["assets/cover.jpg","assets/img1.jpeg","assets/img2.jpeg","assets/e-card.jpeg","assets/wedding.mp3","assets/e-video.mp4","App.js","reportWebVitals.js","index.js"],"names":["buttonConfig","label","id","botConfig","text","audio","weddingSong","image","Image1","Image2","location","eCard","video","eVideo","App","useState","CoverPic","chatData","setChatData","isInput","setInput","currentButtonFlow","setCurrentButtonFlow","userSelection","setUserSelection","chatRef","useRef","audioRef","videoRef","useEffect","current","newNode","scrollTop","scrollHeight","src","pause","play","addEventListener","document","getElementById","className","ref","style","height","map","obj","i","data","userSays","dataText","dangerouslySetInnerHTML","__html","data-action","width","type","controls","typing","renderChat","onClick","e","placeholder","disabled","slice","config","Button","variant","preventDefault","cloneChatData","buttons","filter","buttonFlow","userObj","botObj","push","buttonHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mPAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCcnCA,EAAe,CAEjB,CACEC,MAAO,oCACPC,GAAI,gBAEN,CACED,MAAO,6DACPC,GAAI,gBAEN,CACED,MAAO,0BACPC,GAAI,cAEN,CACED,MAAO,qCACPC,GAAI,iBAEN,CACED,MAAO,2BACPC,GAAI,aAIJC,EAAY,CAChB,eAAgB,CACdC,KAAM,CAAC,uCAAD,8GACNC,MAAQC,GAEV,eAAgB,CACdF,KAAM,CAAC,uCAAD,0IAER,gBAAiB,CACfG,MAAO,CAACC,EAAQC,GAChBL,KAAM,CAAC,gBAET,SAAY,CACVA,KAAM,CAAC,gDAAiD,oCACxDM,SAAU,oGAEZ,WAAc,CACZN,KAAM,CAAC,iEACPG,MAAO,CAACI,GACRC,MAAOC,IA4JIC,MAxJf,WAAgB,IAAD,EACmBC,mBAAS,CACvC,CACIR,MAAO,CAACS,GACRZ,KAAM,CAAC,oBAAD,0EAA6E,0FAJ5E,mBACNa,EADM,KACIC,EADJ,OASeH,oBAAS,GATxB,mBASNI,EATM,KASGC,EATH,OAUqCL,mBAASf,GAV9C,mBAUNqB,EAVM,KAUaC,EAVb,OAW6BP,mBAAS,IAXtC,mBAWNQ,EAXM,KAWSC,EAXT,KAaNC,EAAUC,kBAAO,GACjBC,EAAWD,kBAAO,GAClBE,EAAWF,kBAAO,GAqGzB,OA1DAG,qBAAU,WACR,GAAGJ,EAAQK,QAAS,CAClB,IAAMC,EAAUN,EACfM,EAAQD,QAAQE,UAAWD,EAAQD,QAAQG,iBAKhDJ,qBAAU,WACa,iBAAlBN,IACDI,EAASG,QAAQI,IAAM5B,EACvBqB,EAASG,QAAQK,QACjBR,EAASG,QAAQM,QAEE,eAAlBb,GACDK,EAASE,QAAQO,iBAAiB,WAAW,WAC3CC,SAASC,eAAe,SAASJ,aAGpC,CAACZ,IAwCF,qBAAKiB,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAeC,IAAKhB,EAASiB,MAAOvB,EAAU,CAAEwB,OAAQ,OAAS,CAACA,OAAQ,OAAzF,SACK1B,EAAS2B,KAAI,SAACC,EAAKC,GAAN,OAxGP,SAACC,EAAMD,GAAP,OACjB,mCACKA,EAAI,IAAM,EACP,qBAAKN,UAAU,gBAAf,SACE,qBAAKA,UAAU,2BAAf,SAA2CO,EAAKC,aAGlD,qBAAKR,UAAU,eAAf,SACI,mCACE,gCACKO,EAAK3C,MAAS2C,EAAK3C,KAAKwC,KAAI,SAACK,GAAD,OAAc,qBAAKT,UAAU,sBAAf,SACrC,sBAAMU,wBAAyB,CAACC,OAAQF,UAG7CF,EAAKxC,OAAUwC,EAAKxC,MAAMqC,KAAI,SAACrC,GAAD,OAAW,qBAAKiC,UAAU,gBAAf,SACtC,qBAAKY,cAAY,OAAOlB,IAAK3B,SAGhCwC,EAAKrC,UAAY,qBAAK8B,UAAU,sBAAf,SACd,qBAAKN,IAAKa,EAAKrC,SAAUgC,MAAO,CAACW,MAAO,YAG3CN,EAAK1C,OAAS,uBAAOoC,IAAKd,EAAUzB,GAAG,QAAzB,SACb,wBAAQoD,KAAK,iBAEdP,EAAKnC,OAAS,qBAAK4B,UAAU,kBAAf,SACX,uBAAOC,IAAKb,EAAUyB,MAAM,MAAMV,OAAO,MAAMY,UAAQ,EAAvD,SACE,wBAAQrB,IAAKa,EAAKnC,MAAO0C,KAAK,kBAKnCP,EAAKS,QAAU,oBAwEEC,CAAWZ,EAAKC,QAE9C,sBAAKN,UAAU,aAAf,UACE,sBAAKA,UAAU,sBAAsBkB,QA7C1B,SAACC,GACpBvC,GAAUD,IA4CF,UACE,uBACEmC,KAAK,OACLM,YAAY,yHACZpB,UAAU,QACVqB,UAAQ,IAEV,cAAC,IAAD,CAAcrB,UAAU,kBAEzBrB,GAAW,qBAAKqB,UAAU,uBAAf,SACTnB,EAAkByC,MAAM,EAAE,GAAGlB,KAAI,SAACmB,EAAQjB,GAAT,OAChC,cAACkB,EAAA,EAAD,CACEV,KAAK,SACLd,UAAU,SACVyB,QAAQ,YACRP,QAAS,SAACC,GAAD,OA1CH,SAACA,EAAGzD,EAAID,GAC5B0D,EAAEO,iBACF,IAAMC,EAAa,YAAOlD,GACpBmD,EAAU/C,EAAkBgD,QAAO,SAACC,GAAD,OAAgBA,EAAWpE,KAAOA,KACrEqE,EAAU,CACdvB,SAAU/C,GAENuE,EAAM,eACPrE,EAAUD,IAEfiE,EAAcM,KAAKF,GACnBJ,EAAcM,KAAKD,GACnBtD,EAAYiD,GACZ7C,EAAqB8C,GACrB5C,EAAiBtB,GACjBkB,GAAUD,GA2BoBuD,CAAcf,EAAGI,EAAO7D,GAAI6D,EAAO9D,QAJrD,SAMK8D,EAAO9D,wBC9Lb0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASC,eAAe,SAM1BoC,M","file":"static/js/main.33390fae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.b5afa7f3.jpg\";","export default __webpack_public_path__ + \"static/media/img1.aa756d6b.jpeg\";","export default __webpack_public_path__ + \"static/media/img2.4dfef6c9.jpeg\";","export default __webpack_public_path__ + \"static/media/e-card.236b7a59.jpeg\";","export default __webpack_public_path__ + \"static/media/wedding.b5887c68.mp3\";","export default __webpack_public_path__ + \"static/media/e-video.e413b067.mp4\";","import React, {useState, useEffect, useRef} from 'react';\n\nimport { Button } from '@material-ui/core';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport './App.css';\n\nimport CoverPic from './assets/cover.jpg'\nimport Image1 from './assets/img1.jpeg'\nimport Image2 from './assets/img2.jpeg'\nimport eCard from './assets/e-card.jpeg'\n\nimport weddingSong from './assets/wedding.mp3'\nimport eVideo from './assets/e-video.mp4'\n\nconst buttonConfig = [\n\n    {\n      label: 'üìÖ When is the wedding?',\n      id: 'wedding date'\n    },\n    {\n      label: 'üï∫üèº When is the Sangeet? üíÉ',\n      id: 'sangeet date'\n    },\n    {\n      label: 'Invitation Card & Video',\n      id: 'invitation'\n    },\n    {\n      label: 'Want to see your pics üòç',\n      id: 'personal pics'\n    },\n    {\n      label: 'Where do I need to come?',\n      id: 'location'\n    },  \n]\n\nconst botConfig = {\n  'wedding date': {\n    text: [`It's on the <b>11th</b> of December.`, `Yeah we know, it's less than even a month and we are super nervous!`, `Please be there by 6pm üôè `],\n    audio:  weddingSong\n  },\n  'sangeet date': {\n    text: [`It's on the <b>10th</b> of December.`, `Yeah! He is a really good dancer üï∫. I am not so bad myself üíÉüèª`, `Please be there by 6pm üôè `]\n  },\n  'personal pics': {\n    image: [Image1, Image2],\n    text: [`Here you go`],\n  },\n  'location': {\n    text: [`It's at <b>Sri Sitaramji Bhawan, Raniganj</b>`, 'you can just follow google maps:'],\n    location: 'https://tars-file-upload.s3.amazonaws.com/ByNADi/e8e72425e745b4a32703175a09276c0a--staticmap.png'\n  },\n  'invitation': {\n    text: [`We may not have it all together, but together we have it all.`],\n    image: [eCard],\n    video: eVideo\n  }\n}\n\nfunction App() {\n  const [chatData, setChatData] = useState([\n    {\n        image: [CoverPic],\n        text: ['Hey! üòä', `We, <b>Abhineet</b> and <b>Raksha</b> are getting married. üíç`, 'And we want you to be a part of this celebration as we take the next step together.']\n    }\n    ]\n  )\n\n  const [isInput, setInput] = useState(true);\n  const [currentButtonFlow, setCurrentButtonFlow] = useState(buttonConfig)\n  const [userSelection, setUserSelection] = useState('')\n\n   const chatRef = useRef(false)\n   const audioRef = useRef(false)\n   const videoRef = useRef(false)\n   \n  const renderChat = (data, i) => (\n    <>\n        {i % 2 === 1 ? (\n            <div className=\"user-response\">\n              <div className=\"message user-chat-bubble\">{data.userSays}</div>\n            </div>\n        ) : (\n            <div className=\"bot-response\">\n                <> \n                  <div >\n                      {data.text  && data.text.map((dataText) => <div className=\"message chat-bubble\">\n                            <span dangerouslySetInnerHTML={{__html: dataText}}></span>    \n                          </div>)\n                      }\n                      {data.image  && data.image.map((image) => <div className=\"message-image\">\n                          <img data-action=\"zoom\" src={image}/>    \n                        </div>)\n                      }\n                      {data.location && <div className=\"message chat-bubble\">\n                          <img src={data.location} style={{width: '100%'}}/>\n                        </div>\n                      }\n                      {data.audio && <audio ref={audioRef} id=\"audio\">\n                        <source type=\"audio/mpeg\"/>\n                      </audio>}\n                      {data.video && <div className=\"video-container\">\n                          <video ref={videoRef} width=\"200\" height=\"240\" controls>\n                            <source src={data.video} type=\"video/mp4\" />\n                          </video>\n                        </div>\n                      }\n\n                      {data.typing && 'typing..'}\n                  </div>\n                </>\n             </div>\n           \n        )}\n    </>\n  )\n\n  useEffect(() => {\n    if(chatRef.current) {\n      const newNode = chatRef\n       newNode.current.scrollTop= newNode.current.scrollHeight\n    }\n  })\n\n\n  useEffect(() => { \n    if(userSelection === 'wedding date') {\n      audioRef.current.src = weddingSong;\n      audioRef.current.pause();\n      audioRef.current.play();\n    }\n    if(userSelection === 'invitation') {\n      videoRef.current.addEventListener('playing', () => {\n        document.getElementById('audio').pause()\n      })\n    }\n  }, [userSelection])\n\n  const inputHandler = (e) => {\n    setInput(!isInput)\n  }\n\n  // const chatLogicHandler = ( id, label) => {\n  //   const cloneChatData = [...chatData];\n  //   console.log(cloneChatData, '***first')\n  //   // cloneChatData.pop()\n  //   const botObj = {\n  //     ...botConfig[id]\n  //   }\n  //   cloneChatData.push(botObj)\n  //   console.log(cloneChatData, '***second')\n  //   setChatData(cloneChatData)\n  //   setUserSelection(id)\n  //   setInput(!isInput)\n  // }\n\n  const buttonHandler = (e, id, label) => {\n    e.preventDefault();\n    const cloneChatData = [...chatData];\n    const buttons = currentButtonFlow.filter((buttonFlow) => buttonFlow.id !== id)\n    const userObj = {\n      userSays: label\n    } \n    const botObj = {\n      ...botConfig[id]\n    }\n    cloneChatData.push(userObj)\n    cloneChatData.push(botObj)\n    setChatData(cloneChatData)\n    setCurrentButtonFlow(buttons)\n    setUserSelection(id)\n    setInput(!isInput)\n    // setTimeout(() => chatLogicHandler( id, label), 3000)\n  }\n\n  return (\n    <div className=\"bot\">\n      <div className=\"bot-container\">\n        <div className=\"bot-section\">\n          <div className=\"bot-messages\" ref={chatRef} style={isInput ? { height: '75%'} : {height: '88%'}}> \n              {chatData.map((obj, i) => renderChat(obj, i))}\n          </div>\n          <div className=\"bot-footer\">\n            <div className=\"bot-input-container\" onClick={inputHandler}>\n              <input\n                type=\"text\" \n                placeholder=\"üëáüèªüëáüèª Choose from below... üëáüèªüëáüèª\"\n                className=\"input\"\n                disabled\n              />\n              <TelegramIcon className=\"input-send\"/>\n            </div>\n            {isInput && <div className=\"bot-button-container\">\n              {currentButtonFlow.slice(0,2).map((config, i) => (\n                <Button \n                  type=\"button\"\n                  className=\"button\" \n                  variant=\"contained\"\n                  onClick={(e) => buttonHandler(e, config.id, config.label)}\n                >\n                    {config.label}\n                </Button>\n              ))}\n            </div>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}